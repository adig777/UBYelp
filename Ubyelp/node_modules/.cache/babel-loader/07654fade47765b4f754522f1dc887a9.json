{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\List\\\\Lists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { TextField } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Accordion } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [newitemname, setnewitemname] = useState('');\n  const [newlistname, setnewlistname] = useState('');\n  const [newitemdesc, setnewitemdesc] = useState('');\n  const [newlistdesc, setnewlistdesc] = useState('');\n  const [newrating, setnewrating] = useState(5);\n  const {\n    account_id\n  } = state;\n  const [id, setid] = useState(account_id);\n  const [currname, setcurrname] = useState('');\n  const [alllists, setalllists] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  function initialize() {\n    if (!initialized) {\n      fetch('http://localhost:3001/getlists', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          'id': id\n        })\n      }).then(response => response.json()).then(list => {\n        setalllists(list);\n      });\n      setInitialized(true);\n    }\n  }\n\n  function editlistname(e, list_id) {\n    setnewlistname(e.target.value);\n    fetch('http://localhost:3001/editlistname', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_id': list_id,\n        'newTitle': newlistname\n      })\n    }).then(response => response.json()).then(res => {});\n  }\n\n  function editlistitemname(e, list_item_id) {\n    setnewitemname(e.target.value);\n    fetch('http://localhost:3001/edititemname', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_item_id': list_item_id,\n        'name': newitemname\n      })\n    }).then(response => response.json()).then(res => {});\n  }\n\n  function editlistdesc(e, list_id) {\n    setnewlistdesc(e.target.value);\n    fetch('http://localhost:3001/editlistdesc', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_id': list_id,\n        'newDesc': newlistdesc\n      })\n    }).then(response => response.json()).then(res => {});\n  }\n\n  function editlistitemdesc(e, list_item_id) {\n    setnewitemdesc(e.target.value);\n    fetch('http://localhost:3001/edititemdesc', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_item_id': list_item_id,\n        'newDesc': newitemdesc\n      })\n    }).then(response => response.json()).then(res => {});\n  }\n\n  function editlistitemrating(e, list_item_id) {\n    setnewrating(e.target.value);\n    fetch('http://localhost:3001/edititemrating', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_item_id': list_item_id,\n        'rating': newrating\n      })\n    }).then(response => response.json()).then(res => {});\n  }\n\n  function deletelist(list_id) {\n    fetch('http://localhost:3001/deletelist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_id': list_id\n      })\n    }).then(response => response.json()).then(res => {});\n  }\n\n  function deletelistitem(list_id, list_item_id) {\n    fetch('http://localhost:3001/deletelist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'account_id': id,\n        'list_id': list_id,\n        'list_item_id': list_item_id\n      })\n    }).then(response => response.json()).then(res => {\n      console.log('delete list item success');\n    });\n  }\n\n  function renderlistoptions() {\n    return Object.keys(alllists).map(listnames => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          value: listnames,\n          type: \"submit\",\n          onClick: () => setcurrname(listnames),\n          children: listnames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), \"\\xA0\"]\n      }, void 0, true);\n    });\n  }\n\n  function renderlist(listname) {\n    if (listname !== '') {\n      console.log(listname);\n      var mainlist = alllists[listname];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [renderlistoptions, /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [listname, /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            className: \"deletebutton\",\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 28\n            }, this),\n            onClick: () => deletelist(mainlist.id),\n            children: \"Delete List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          size: \"small\",\n          label: \"Change List Name\",\n          defaultValue: mainlist.name,\n          value: newlistname,\n          onChange: e => editlistname(e, mainlist.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          size: \"small\",\n          label: \"Change List Description\",\n          defaultValue: mainlist.desc,\n          value: newlistdesc,\n          onChange: e => editlistdesc(e, mainlist.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), Object.keys(mainlist).map(listitem => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Accordion, {\n              defaultActiveKey: \"0\",\n              children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                eventKey: listitem.id,\n                children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                  children: listitem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 29\n                }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    size: \"small\",\n                    label: \"Change Item Name\",\n                    defaultValue: listitem.name,\n                    value: newitemname,\n                    onChange: e => editlistitemname(e, listitem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"text\",\n                    size: \"small\",\n                    children: mainlist.listitem.link\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 33\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    size: \"small\",\n                    label: \"Change Item Description\",\n                    defaultValue: listitem.desc,\n                    value: newitemdesc,\n                    onChange: e => editlistitemdesc(e, listitem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    size: \"small\",\n                    label: \"Change Item Rating\",\n                    defaultValue: listitem.rating,\n                    value: newrating,\n                    onChange: e => editlistitemrating(e, listitem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              className: \"deletebutton\",\n              variant: \"outlined\",\n              startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 44\n              }, this),\n              onClick: () => deletelistitem(mainlist.id, listitem.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, mainlist.listitem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Lists\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NavBar\",\n      children: [\"UBYELP \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigate('/about', {\n            'state': {\n              'account_id': account_id\n            }\n          });\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigate('/lists');\n        },\n        children: \"Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigate('/about', {\n            'state': {\n              'account_id': account_id\n            }\n          });\n        },\n        children: \"About us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigate('/settings', {\n            'state': {\n              'account_id': account_id\n            }\n          });\n        },\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 8\n    }, this), initialize(), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), renderlistoptions(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderlist(currname)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lists, \"/XbP8abKR47rGzXRB/fPpIOjrmo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/List/Lists.js"],"names":["React","useState","Button","TextField","DeleteIcon","useLocation","useNavigate","Accordion","Lists","state","navigate","newitemname","setnewitemname","newlistname","setnewlistname","newitemdesc","setnewitemdesc","newlistdesc","setnewlistdesc","newrating","setnewrating","account_id","id","setid","currname","setcurrname","alllists","setalllists","initialized","setInitialized","initialize","fetch","method","headers","body","JSON","stringify","then","response","json","list","editlistname","e","list_id","target","value","res","editlistitemname","list_item_id","editlistdesc","editlistitemdesc","editlistitemrating","deletelist","deletelistitem","console","log","renderlistoptions","Object","keys","map","listnames","renderlist","listname","mainlist","name","desc","listitem","link","rating"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default function Lists(){\r\n   const {state} = useLocation()\r\n   const navigate = useNavigate();\r\n   const[newitemname, setnewitemname] = useState('')\r\n   const[newlistname, setnewlistname] = useState('')\r\n   const[newitemdesc, setnewitemdesc] = useState('')\r\n   const[newlistdesc, setnewlistdesc] = useState('')\r\n   const[newrating, setnewrating] = useState(5)\r\n   const{account_id} = state;\r\n   const[id,setid] = useState(account_id)\r\n   const[currname, setcurrname] = useState('')\r\n   const[alllists, setalllists] = useState([])\r\n   const [initialized, setInitialized] = useState(false);\r\n   \r\n\r\n   \r\nfunction initialize(){\r\n   if(!initialized){\r\n   fetch('http://localhost:3001/getlists', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'id': id\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((list) => {\r\n       setalllists(list)\r\n    });\r\n      setInitialized(true)\r\n   }\r\n}\r\n    function editlistname(e,list_id){\r\n        setnewlistname(e.target.value)\r\n\r\n        fetch('http://localhost:3001/editlistname', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'account_id': id,\r\n            'list_id': list_id,\r\n            'newTitle': newlistname\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((res) => {  \r\n    });\r\n    }\r\n\r\n    function editlistitemname(e,list_item_id){\r\n        setnewitemname(e.target.value)\r\n\r\n        fetch('http://localhost:3001/edititemname', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'account_id': id,\r\n            'list_item_id': list_item_id,\r\n            'name': newitemname\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((res) => {  \r\n    });\r\n    }\r\n\r\n    function editlistdesc(e,list_id){\r\n        setnewlistdesc(e.target.value)\r\n\r\n        fetch('http://localhost:3001/editlistdesc', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'account_id': id,\r\n            'list_id': list_id,\r\n            'newDesc': newlistdesc\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((res) => {  \r\n    });\r\n    }\r\n\r\n    function editlistitemdesc(e,list_item_id){\r\n        setnewitemdesc(e.target.value)\r\n\r\n        fetch('http://localhost:3001/edititemdesc', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'account_id': id,\r\n            'list_item_id': list_item_id,\r\n            'newDesc': newitemdesc\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((res) => {  \r\n    });\r\n    }\r\n\r\n    function editlistitemrating(e,list_item_id){\r\n        setnewrating(e.target.value)\r\n\r\n        fetch('http://localhost:3001/edititemrating', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'account_id': id,\r\n            'list_item_id': list_item_id,\r\n            'rating': newrating\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((res) => {  \r\n    });\r\n    }\r\n\r\n    function deletelist(list_id){\r\n        fetch('http://localhost:3001/deletelist', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                'account_id': id,\r\n                'list_id': list_id\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((res) => {  \r\n        });\r\n\r\n    }\r\n    function deletelistitem(list_id,list_item_id){\r\n        fetch('http://localhost:3001/deletelist', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                'account_id': id,\r\n                'list_id': list_id,\r\n                'list_item_id': list_item_id\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((res) => {  \r\n            console.log('delete list item success')\r\n        });\r\n\r\n    }\r\n\r\n\r\n    function renderlistoptions(){\r\n        return Object.keys(alllists).map(listnames =>{\r\n            return(\r\n                <>\r\n                <Button\r\n                variant = \"outlined\"\r\n                value = {listnames}\r\n                type = \"submit\"\r\n                onClick = {() => setcurrname(listnames)}\r\n                >\r\n                {listnames}\r\n                </Button>\r\n                &nbsp;\r\n                </>\r\n            );\r\n        });\r\n    }\r\n\r\n    function renderlist(listname){\r\n    if(listname!==''){\r\n        console.log(listname);\r\n        var mainlist = alllists[listname]\r\n        return(\r\n            <div>\r\n                {renderlistoptions}\r\n                <h1>\r\n                    {listname}\r\n                <Button\r\n                size=\"small\"\r\n                className=\"deletebutton\"\r\n                variant=\"outlined\"\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => deletelist(mainlist.id)}\r\n              >\r\n                Delete List\r\n              </Button>\r\n                </h1>\r\n                <TextField\r\n                    type = \"text\"\r\n                    size = \"small\"\r\n                    label = \"Change List Name\"\r\n                    defaultValue = {mainlist.name}\r\n                    value = {newlistname}\r\n                    onChange = {\r\n                        (e) => editlistname(e,mainlist.id)\r\n                    }\r\n                    />\r\n                <TextField\r\n                    type = \"text\"\r\n                    size = \"small\"\r\n                    label = \"Change List Description\"\r\n                    defaultValue = {mainlist.desc}\r\n                    value = {newlistdesc}\r\n                    onChange = {\r\n                        (e) => editlistdesc(e,mainlist.id)\r\n                    }\r\n                    />\r\n                {Object.keys(mainlist).map((listitem) => {\r\n                    return (\r\n                        <div key={mainlist.listitem.id} >\r\n                            <Accordion defaultActiveKey=\"0\">\r\n                            <Accordion.Item eventKey={listitem.id}>\r\n                            <Accordion.Header>{listitem.name}</Accordion.Header>\r\n                            &nbsp;\r\n                           <Accordion.Body>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                size=\"small\"\r\n                                label=\"Change Item Name\"\r\n                                defaultValue={listitem.name}\r\n                                value={newitemname}\r\n                                onChange={(e) => editlistitemname(e, listitem.id)}\r\n                            />\r\n                                <Button\r\n                                    variant=\"text\"\r\n                                    size=\"small\"\r\n                                >\r\n                                    {mainlist.listitem.link}\r\n                                </Button>\r\n                                &nbsp;\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                    label=\"Change Item Description\"\r\n                                    defaultValue={listitem.desc}\r\n                                    value={newitemdesc}\r\n                                    onChange={(e) => editlistitemdesc(e, listitem.id)}\r\n                                />\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                    label=\"Change Item Rating\"\r\n                                    defaultValue={listitem.rating}\r\n                                    value={newrating}\r\n                                    onChange={\r\n                                        (e) => editlistitemrating(e, listitem.id)\r\n                                    }\r\n                                />\r\n                                </Accordion.Body>\r\n                                </Accordion.Item>\r\n                            </Accordion>\r\n                            <Button\r\n                                size=\"small\"\r\n                                className=\"deletebutton\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<DeleteIcon />}\r\n                                onClick={() => deletelistitem(mainlist.id, listitem.id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </div>\r\n\r\n\r\n                    );\r\n                })\r\n            }\r\n            </div>\r\n        );\r\n    }}\r\n    \r\n  \r\n    \r\n\r\n\r\n\r\n    return(\r\n        <div className=\"Lists\">\r\n       <div className=\"NavBar\">\r\n                UBYELP\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button onClick={() => { navigate('/about', { 'state': { 'account_id': account_id } }) }}>\r\n                    Search\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button onClick={() => { navigate('/lists') }}>\r\n                    Lists\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button onClick={() => { navigate('/about', { 'state': { 'account_id': account_id } }) }}>\r\n                    About us\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button onClick={() => { navigate('/settings', { 'state': { 'account_id': account_id } })}}>\r\n                    Settings\r\n                </Button>\r\n            </div>\r\n         {initialize()}\r\n            <h1>\r\n            My Lists\r\n            </h1>\r\n       \r\n        {renderlistoptions()}\r\n        <div>\r\n            {\r\n            renderlist(currname)\r\n            }\r\n        </div>\r\n\r\n        </div>\r\n    );  \r\n    \r\n\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}