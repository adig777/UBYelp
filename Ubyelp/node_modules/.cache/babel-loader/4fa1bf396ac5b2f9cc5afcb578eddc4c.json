{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SearchBar.css';\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const {\n    account_id\n  } = state;\n  const navigate = useNavigate();\n  var thisState = {\n    id: account_id,\n    term: '',\n    location: '',\n    sortBy: 'best_match',\n    price: 2,\n    open_now: true,\n    radius: 30000\n  };\n  const sortByOptions = {\n    'Best Match': 'best_match',\n    'Distance': 'distance',\n    'Highest Rated': 'rating',\n    'Most Reviewed': 'review_count'\n  };\n  const filterByPrices = {\n    '$': 1,\n    '$$': 2,\n    '$$$': 3,\n    '$$$$': 4\n  };\n  const filterByOpenNows = {\n    'Open Now': 1,\n    'Hours don\\'t matter': 0 //Needs a better name\n\n  }; //Initialize state\n\n  const [id, unused] = useState(account_id);\n  const [term, setTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [sortBy, setSortBy] = useState('best_match');\n  const [radius, setRadius] = useState(30000);\n  const [rating, setRating] = useState('-1');\n  const [price, setPrice] = useState(2);\n  const [open_now, setOpenNow] = useState(1);\n  const [in_list, setInList] = useState('');\n  const [not_list, setNotList] = useState('');\n  fetch('http://localhost:3001/defaultfilters', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: JSON.stringify({\n      'id': id\n    })\n  }).then(response => response.json()).then(filters => {\n    setRadius(filters.distance);\n    setRating(filters.rating);\n    setPrice(filters.price);\n    setOpenNow(filters.open);\n    setInList(filters.in_list);\n    setNotList(filters.not_list);\n    if (filters.distance !== -1) document.getElementById(\"radius\").value = radius; //rating\n  }); // Determines which sort method to highlight\n\n  function getSortByClass(sortByOption) {\n    if (sortBy === sortByOption) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByPriceClass(filterByPrice) {\n    if (price === filterByPrice) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByOpenNowClass(filterByOpenNow) {\n    if (open_now === filterByOpenNow) {\n      return 'active';\n    }\n\n    return '';\n  } // Determines which sort method to use\n\n\n  function handleSortByChange(event) {\n    setSortBy(sortByOptions[event.target.value]);\n    console.log(event.target.value);\n    console.log(sortBy);\n  } // Determines which price range we choose\n\n\n  function handleFilterByPriceChange(filterByPrice) {\n    ;\n    setPrice(filterByPrice);\n  } // Determines open or closed\n\n\n  function handleFilterByOpenNowChange(filterByOpenNow) {\n    setOpenNow(filterByOpenNow.target.value);\n  } // Updates food/product input given by user\n\n\n  function handleTermChange(event) {\n    setTerm(event.target.value);\n  } // Updates location input given by user\n\n\n  function handleLocationChange(event) {\n    setLocation(event.target.value);\n  } // Updates radius input given by user\n\n\n  function handleRadiusChange(event) {\n    let value = event.target.value;\n\n    if (value > 40000) {\n      document.getElementById(\"radius\").value = 40000;\n      value = 40000;\n    } else if (value < 1) {\n      document.getElementById(\"radius\").value = 1;\n      value = 1;\n    }\n\n    setRadius(value);\n  } // Queries Yelp for food/product\n\n\n  function handleSearch(event) {\n    //this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\n    fetch('http://localhost:3001/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        //Temporary variables used \n        //Alternative option: JSON.stringify(this.filters)\n        id: id,\n        keywords: term,\n        location: location,\n        sort_by: sortBy,\n        radius: radius,\n        rating: rating,\n        price: price,\n        open: open_now,\n        in_list: in_list,\n        not_list: not_list\n      })\n    }).then(response => response.json()).then(result => {\n      //Send to account_id and results BusinessList\n      navigate('/results', {\n        'state': {\n          'account_id': thisState.id,\n          'searchResults': result\n        }\n      });\n    });\n    event.preventDefault();\n  } // Highlights the selected sort-by method\n\n\n  function renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getSortByClass(sortByOptionValue),\n        value: sortByOptionValue,\n        onClick: handleSortByChange.bind(sortByOptionValue),\n        children: sortByOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights the selected price range\n\n\n  function renderFilterByPrice() {\n    return Object.keys(filterByPrices).map(filterByPrice => {\n      let filterByPriceValue = filterByPrices[filterByPrice];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByPriceClass(filterByPriceValue),\n        onClick: () => handleFilterByPriceChange(filterByPriceValue),\n        children: filterByPrice\n      }, filterByPriceValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights open or closed\n\n\n  function renderFilterByOpenNow() {\n    return Object.keys(filterByOpenNows).map(filterByOpenNow => {\n      let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByOpenNowClass(filterByOpenNowValue),\n        onClick: handleFilterByOpenNowChange.bind(filterByOpenNowValue),\n        children: filterByOpenNow\n      }, filterByOpenNowValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this);\n    });\n  } // Renders two input boxes. One for business and the other for location. \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-sort-options\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-prices\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByPrice()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-openNow\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByOpenNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Keyword. e.g. burgers\",\n        onChange: handleTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Location. e.g. San Jose\",\n        onChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"radius\",\n        type: \"number\",\n        min: \"1\",\n        max: \"40000\",\n        placeholder: \"Enter Radius in Meters. e.g. 30000\",\n        onChange: handleRadiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"0+uiw7k/LIfeSs+N6vnseWgfgds=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/SearchBar/SearchBar.js"],"names":["React","useState","useLocation","useNavigate","SearchBar","state","account_id","navigate","thisState","id","term","location","sortBy","price","open_now","radius","sortByOptions","filterByPrices","filterByOpenNows","unused","setTerm","setLocation","setSortBy","setRadius","rating","setRating","setPrice","setOpenNow","in_list","setInList","not_list","setNotList","fetch","method","headers","body","JSON","stringify","then","response","json","filters","distance","open","document","getElementById","value","getSortByClass","sortByOption","getFilterByPriceClass","filterByPrice","getFilterByOpenNowClass","filterByOpenNow","handleSortByChange","event","target","console","log","handleFilterByPriceChange","handleFilterByOpenNowChange","handleTermChange","handleLocationChange","handleRadiusChange","handleSearch","keywords","sort_by","result","preventDefault","renderSortByOptions","Object","keys","map","sortByOptionValue","bind","renderFilterByPrice","filterByPriceValue","renderFilterByOpenNow","filterByOpenNowValue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchBar.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function SearchBar() {\r\n    const { state } = useLocation();\r\n    const { account_id } = state;\r\n    const navigate = useNavigate();\r\n\r\n    var thisState = {\r\n        id: account_id,\r\n        term:'',\r\n        location:'',\r\n        sortBy:'best_match',\r\n        price: 2,\r\n        open_now: true,\r\n        radius: 30000\r\n    };\r\n\r\n    const sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Distance': 'distance',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count'\r\n    };\r\n\r\n    const filterByPrices = {\r\n        '$': 1,\r\n        '$$': 2,\r\n        '$$$': 3,\r\n        '$$$$': 4\r\n    };\r\n\r\n    const filterByOpenNows = {\r\n        'Open Now': 1,\r\n        'Hours don\\'t matter': 0    //Needs a better name\r\n    };\r\n\r\n\r\n    //Initialize state\r\n    const [id, unused] = useState(account_id);\r\n    const [term, setTerm] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [sortBy, setSortBy] = useState('best_match');\r\n    const [radius, setRadius] = useState(30000);\r\n    const [rating, setRating] = useState('-1');\r\n    const [price, setPrice] = useState(2);\r\n    const [open_now, setOpenNow] = useState(1);\r\n    const [in_list, setInList] = useState('');\r\n    const [not_list, setNotList] = useState('');\r\n    fetch('http://localhost:3001/defaultfilters', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'id': id\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((filters) => {\r\n        setRadius(filters.distance);\r\n        setRating(filters.rating);\r\n        setPrice(filters.price);\r\n        setOpenNow(filters.open);\r\n        setInList(filters.in_list);\r\n        setNotList(filters.not_list);\r\n\r\n        if (filters.distance !== -1) document.getElementById(\"radius\").value = radius;\r\n        //rating\r\n\r\n    });\r\n\r\n\r\n    // Determines which sort method to highlight\r\n    function getSortByClass(sortByOption) {\r\n        if(sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n\r\n    function getFilterByPriceClass(filterByPrice){\r\n        if (price === filterByPrice) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n\r\n\r\n    function getFilterByOpenNowClass(filterByOpenNow){\r\n        if (open_now === filterByOpenNow) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    // Determines which sort method to use\r\n    function handleSortByChange(event) {\r\n        setSortBy(sortByOptions[event.target.value]);\r\n        console.log(event.target.value);\r\n        console.log(sortBy);\r\n    }\r\n\r\n\r\n     // Determines which price range we choose\r\n    function handleFilterByPriceChange(filterByPrice) {;\r\n        setPrice(filterByPrice);\r\n    }\r\n\r\n    // Determines open or closed\r\n    function handleFilterByOpenNowChange(filterByOpenNow) {\r\n        setOpenNow(filterByOpenNow.target.value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Updates food/product input given by user\r\n    function handleTermChange(event) {\r\n        setTerm(event.target.value);\r\n    }\r\n\r\n    // Updates location input given by user\r\n    function handleLocationChange(event) {\r\n        setLocation(event.target.value);\r\n    }\r\n\r\n     // Updates radius input given by user\r\n    function handleRadiusChange(event) {\r\n        let value = event.target.value;\r\n        if (value > 40000) {\r\n            document.getElementById(\"radius\").value = 40000;\r\n            value = 40000;\r\n        } else if (value < 1) {\r\n            document.getElementById(\"radius\").value = 1;\r\n            value = 1;\r\n        }\r\n        setRadius(value);\r\n    }\r\n\r\n    \r\n\r\n\r\n    // Queries Yelp for food/product\r\n    function handleSearch(event) {\r\n        //this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\r\n        fetch('http://localhost:3001/search', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                //Temporary variables used \r\n                //Alternative option: JSON.stringify(this.filters)\r\n                id: id,\r\n                keywords: term,\r\n                location: location,\r\n                sort_by: sortBy,\r\n                radius: radius,\r\n                rating: rating,\r\n                price: price,\r\n                open: open_now,\r\n                in_list: in_list,\r\n                not_list: not_list\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((result) => {\r\n            //Send to account_id and results BusinessList\r\n            navigate('/results', { 'state': { 'account_id': thisState.id, 'searchResults': result } });\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Highlights the selected sort-by method\r\n    function renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return (\r\n                    <li className={getSortByClass(sortByOptionValue)}\r\n                        value={sortByOptionValue}\r\n                        onClick={handleSortByChange.bind(sortByOptionValue)}>\r\n                    {sortByOption}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n    // Highlights the selected price range\r\n    function renderFilterByPrice() {\r\n        return Object.keys(filterByPrices).map(filterByPrice => {\r\n            let filterByPriceValue = filterByPrices[filterByPrice];\r\n            return (\r\n                    <li className={getFilterByPriceClass(filterByPriceValue)}\r\n                        key={filterByPriceValue}\r\n                        onClick={()=>handleFilterByPriceChange(filterByPriceValue)}>\r\n                    {filterByPrice}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n\r\n    // Highlights open or closed\r\n    function renderFilterByOpenNow() {\r\n        return Object.keys(filterByOpenNows).map(filterByOpenNow => {\r\n            let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\r\n            return (\r\n                    <li className={getFilterByOpenNowClass(filterByOpenNowValue)}\r\n                        key={filterByOpenNowValue}\r\n                        onClick={handleFilterByOpenNowChange.bind(filterByOpenNowValue)}>\r\n                    {filterByOpenNow}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n    // Renders two input boxes. One for business and the other for location. \r\n    return (\r\n        <div className=\"SearchBar\">\r\n\r\n\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                    {renderSortByOptions()} \r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"SearchBar-filter-prices\">\r\n                <ul>\r\n                    {renderFilterByPrice()}\r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-filter-openNow\">          \r\n                <ul>\r\n                    {renderFilterByOpenNow()} \r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-fields\">\r\n                    \r\n                <input placeholder=\"Enter Keyword. e.g. burgers\" onChange={handleTermChange} />\r\n                <input placeholder=\"Enter Location. e.g. San Jose\" onChange={handleLocationChange} />\r\n                <input id=\"radius\" type=\"number\" min=\"1\" max=\"40000\" placeholder=\"Enter Radius in Meters. e.g. 30000\" onChange={handleRadiusChange} />\r\n\r\n            </div>\r\n\r\n\r\n\r\n                <div className=\"SearchBar-submit\">\r\n                <a onClick={handleSearch}>Search</a>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}