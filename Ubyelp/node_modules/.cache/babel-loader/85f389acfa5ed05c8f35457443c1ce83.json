{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  sharedData\n} = useLocation();\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: sharedData.id,\n      term: '',\n      location: '',\n      price: '',\n      sortBy: 'best_match'\n    };\n    console.log(this.state.id);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handlePriceChange = this.handlePriceChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count',\n      'Open': 'open'\n    };\n  } // Determines which sort method to highlight\n\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n\n    return '';\n  } // Determines which sort method to use\n\n\n  handleSortByChange(sortByOption) {\n    this.setState({\n      sortBy: sortByOption\n    });\n  } // Updates food/product input given by user\n\n\n  handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    });\n  } // Updates location input given by user\n\n\n  handleLocationChange(event) {\n    this.setState({\n      location: event.target.value\n    });\n  } // Updates Price input given by user\n\n\n  handlePriceChange(event) {\n    this.setState({\n      price: event.target.value\n    });\n  } // Queries Yelp for food/product\n\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.price, this.state.sortBy);\n    event.preventDefault();\n  } // Highlights the selected sort-by method\n\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.getSortByClass(sortByOptionValue),\n        onClick: this.handleSortByChange.bind(this, sortByOptionValue),\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this);\n    });\n  } // Renders three input boxes: keyword, location, and price\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-sort-options\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.renderSortByOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Keyword e.g. burgers\",\n          onChange: this.handleTermChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Location e.g. San Jose\",\n          onChange: this.handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Price e.g. $/$$/$$$\",\n          onChange: this.handlePriceChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-submit\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: this.handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/SearchBar/SearchBar.js"],"names":["React","useLocation","sharedData","SearchBar","Component","constructor","props","state","id","term","location","price","sortBy","console","log","handleTermChange","bind","handleLocationChange","handlePriceChange","handleSearch","sortByOptions","getSortByClass","sortByOption","handleSortByChange","setState","event","target","value","searchYelp","preventDefault","renderSortByOptions","Object","keys","map","sortByOptionValue","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst { sharedData } = useLocation();\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: sharedData.id,\r\n            term:'',\r\n            location:'',\r\n            price:'',\r\n            sortBy:'best_match'\r\n        };\r\n\r\n        console.log(this.state.id);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handlePriceChange = this.handlePriceChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count',\r\n            'Open': 'open'\r\n        };\r\n    }\r\n\r\n    // Determines which sort method to highlight\r\n    getSortByClass(sortByOption) {\r\n        if(this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    // Determines which sort method to use\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption})\r\n    }\r\n\r\n    // Updates food/product input given by user\r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    // Updates location input given by user\r\n    handleLocationChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n\r\n    // Updates Price input given by user\r\n    handlePriceChange(event) {\r\n        this.setState({price: event.target.value});\r\n    }\r\n\r\n\r\n\r\n    // Queries Yelp for food/product\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.price, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Highlights the selected sort-by method\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (\r\n                    <li className={this.getSortByClass(sortByOptionValue)}\r\n                        key={sortByOptionValue}\r\n                        onClick={this.handleSortByChange.bind(this,sortByOptionValue)}>\r\n                    {sortByOption}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n    // Renders three input boxes: keyword, location, and price\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Enter Keyword e.g. burgers\" onChange={this.handleTermChange} />\r\n                    <input placeholder=\"Enter Location e.g. San Jose\" onChange={this.handleLocationChange} />\r\n                    <input placeholder=\"Enter Price e.g. $/$$/$$$\" onChange={this.handlePriceChange} /> \r\n\r\n                </div>\r\n                 <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Search</a>\r\n                </div>\r\n            </div>    \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}