{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SearchBar.css';\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const {\n    account_id\n  } = state;\n  const navigate = useNavigate();\n  var thisState = {\n    id: account_id,\n    term: '',\n    location: '',\n    sortBy: 'best_match',\n    price: 2,\n    open_now: true,\n    radius: 30000\n  };\n  const [id, unused] = useState(account_id);\n  const [term, setTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [sortBy, setSortBy] = useState('best_match');\n  const [price, setPrice] = useState(2);\n  const [open_now, setOpenNow] = useState(1);\n  const [radius, setRadius] = useState(30000);\n  console.log(account_id);\n  const sortByOptions = {\n    'Best Match': 'best_match',\n    'Highest Rated': 'rating',\n    'Most Reviewed': 'review_count'\n  };\n  const filterByPrices = {\n    '$': 1,\n    '$$': 2,\n    '$$$': 3,\n    '$$$$': 4\n  };\n  const filterByOpenNows = {\n    'Open Now': 1,\n    'Hours don\\'t matter': 0 //Need a better name\n\n  }; // Determines which sort method to highlight\n\n  function getSortByClass(sortByOption) {\n    if (sortBy === sortByOption) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByPriceClass(filterByPrice) {\n    if (price === filterByPrice) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByOpenNowClass(filterByOpenNow) {\n    if (open_now === filterByOpenNow) {\n      return 'active';\n    }\n\n    return '';\n  } // Determines which sort method to use\n\n\n  function handleSortByChange(sortByOption) {\n    setSortBy(sortByOption.target.value);\n  } // Determines which price range we choose\n\n\n  function handleFilterByPriceChange(filterByPrice) {\n    ;\n    setPrice(filterByPrice);\n  } // Determines open or closed\n\n\n  function handleFilterByOpenNowChange(filterByOpenNow) {\n    setOpenNow(filterByOpenNow.target.value);\n  } // Updates food/product input given by user\n\n\n  function handleTermChange(event) {\n    setTerm(event.target.value);\n  } // Updates location input given by user\n\n\n  function handleLocationChange(event) {\n    setLocation(event.target.value);\n  } // Updates radius input given by user\n\n\n  function handleRadiusChange(event) {\n    setRadius(event.target.value);\n  } // Queries Yelp for food/product\n\n\n  function handleSearch(event) {\n    let temp = {\n      //Temporary variables used \n      //Alternative option: JSON.stringify(this.filters)\n      id: id,\n      keywords: term,\n      location: location,\n      sort_by: sortBy,\n      radius: radius,\n      rating: -1,\n      price: price,\n      open: open_now,\n      in_list: '',\n      not_list: ''\n    };\n    console.log(temp); //this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\n\n    fetch('http://localhost:3001/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        //Temporary variables used \n        //Alternative option: JSON.stringify(this.filters)\n        id: id,\n        keywords: term,\n        location: location,\n        sort_by: sortBy,\n        radius: radius,\n        rating: -1,\n        price: price,\n        open: open_now,\n        in_list: '',\n        not_list: ''\n      })\n    }).then(response => response.json()).then(result => {\n      //Send to account_id and results BusinessList\n      navigate('/results', {\n        'state': {\n          'id': thisState.id,\n          'results': result\n        }\n      });\n    });\n    event.preventDefault();\n  } // Highlights the selected sort-by method\n\n\n  function renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getSortByClass(sortByOptionValue),\n        onClick: handleSortByChange.bind(sortByOptionValue),\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights the selected price range\n\n\n  function renderFilterByPrice() {\n    return Object.keys(filterByPrices).map(filterByPrice => {\n      let filterByPriceValue = filterByPrices[filterByPrice];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByPriceClass(filterByPriceValue),\n        onClick: () => handleFilterByPriceChange(filterByPriceValue),\n        children: filterByPrice\n      }, filterByPriceValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights open or closed\n\n\n  function renderFilterByOpenNow() {\n    return Object.keys(filterByOpenNows).map(filterByOpenNow => {\n      let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByOpenNowClass(filterByOpenNowValue),\n        onClick: handleFilterByOpenNowChange.bind(filterByOpenNowValue),\n        children: filterByOpenNow\n      }, filterByOpenNowValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this);\n    });\n  } // Renders two input boxes. One for business and the other for location. \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-sort-options\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-prices\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByPrice()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-openNow\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByOpenNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Keyword. e.g. burgers\",\n        onChange: handleTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Location. e.g. San Jose\",\n        onChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Radius in Meters. e.g. 30000\",\n        onChange: handleRadiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"i3v2dh5hgdb5K0PcXOj4RmBFKnQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/SearchBar/SearchBar.js"],"names":["React","useState","useLocation","useNavigate","SearchBar","state","account_id","navigate","thisState","id","term","location","sortBy","price","open_now","radius","unused","setTerm","setLocation","setSortBy","setPrice","setOpenNow","setRadius","console","log","sortByOptions","filterByPrices","filterByOpenNows","getSortByClass","sortByOption","getFilterByPriceClass","filterByPrice","getFilterByOpenNowClass","filterByOpenNow","handleSortByChange","target","value","handleFilterByPriceChange","handleFilterByOpenNowChange","handleTermChange","event","handleLocationChange","handleRadiusChange","handleSearch","temp","keywords","sort_by","rating","open","in_list","not_list","fetch","method","headers","body","JSON","stringify","then","response","json","result","preventDefault","renderSortByOptions","Object","keys","map","sortByOptionValue","bind","renderFilterByPrice","filterByPriceValue","renderFilterByOpenNow","filterByOpenNowValue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchBar.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function SearchBar() {\r\n    const { state } = useLocation();\r\n    const { account_id } = state;\r\n    const navigate = useNavigate();\r\n\r\n    var thisState = {\r\n        id: account_id,\r\n        term:'',\r\n        location:'',\r\n        sortBy:'best_match',\r\n        price: 2,\r\n        open_now: true,\r\n        radius: 30000\r\n    };\r\n    const [id, unused] = useState(account_id);\r\n    const [term, setTerm] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [sortBy, setSortBy] = useState('best_match');\r\n    const [price, setPrice] = useState(2);\r\n    const [open_now, setOpenNow] = useState(1);\r\n    const [radius, setRadius] = useState(30000);\r\n    console.log(account_id)\r\n\r\n    const sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count'\r\n    };\r\n\r\n    const filterByPrices = {\r\n        '$': 1,\r\n        '$$': 2,\r\n        '$$$': 3,\r\n        '$$$$': 4\r\n    };\r\n\r\n    const filterByOpenNows = {\r\n        'Open Now': 1,\r\n        'Hours don\\'t matter': 0    //Need a better name\r\n    };\r\n\r\n\r\n\r\n    // Determines which sort method to highlight\r\n    function getSortByClass(sortByOption) {\r\n        if(sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n\r\n    function getFilterByPriceClass(filterByPrice){\r\n        if (price === filterByPrice) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n\r\n\r\n    function getFilterByOpenNowClass(filterByOpenNow){\r\n        if (open_now === filterByOpenNow) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    // Determines which sort method to use\r\n    function handleSortByChange(sortByOption) {\r\n        setSortBy(sortByOption.target.value);\r\n    }\r\n\r\n\r\n     // Determines which price range we choose\r\n    function handleFilterByPriceChange(filterByPrice) {;\r\n        setPrice(filterByPrice);\r\n    }\r\n\r\n    // Determines open or closed\r\n    function handleFilterByOpenNowChange(filterByOpenNow) {\r\n        setOpenNow(filterByOpenNow.target.value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Updates food/product input given by user\r\n    function handleTermChange(event) {\r\n        setTerm(event.target.value);\r\n    }\r\n\r\n    // Updates location input given by user\r\n    function handleLocationChange(event) {\r\n        setLocation(event.target.value);\r\n    }\r\n\r\n     // Updates radius input given by user\r\n    function handleRadiusChange(event) {\r\n        setRadius(event.target.value);\r\n    }\r\n\r\n    \r\n\r\n\r\n    // Queries Yelp for food/product\r\n    function handleSearch(event) {\r\n        let temp = {\r\n            //Temporary variables used \r\n            //Alternative option: JSON.stringify(this.filters)\r\n            id: id,\r\n            keywords: term,\r\n            location: location,\r\n            sort_by: sortBy,\r\n            radius: radius,\r\n            rating: -1,\r\n            price: price,\r\n            open: open_now,\r\n            in_list: '',\r\n            not_list: ''\r\n        }\r\n        console.log(temp);\r\n        //this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\r\n        fetch('http://localhost:3001/search', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                //Temporary variables used \r\n                //Alternative option: JSON.stringify(this.filters)\r\n                id: id,\r\n                keywords: term,\r\n                location: location,\r\n                sort_by: sortBy,\r\n                radius: radius,\r\n                rating: -1,\r\n                price: price,\r\n                open: open_now,\r\n                in_list: '',\r\n                not_list: ''\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((result) => {\r\n            //Send to account_id and results BusinessList\r\n            navigate('/results', { 'state': { 'id': thisState.id, 'results': result } });\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Highlights the selected sort-by method\r\n    function renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return (\r\n                    <li className={getSortByClass(sortByOptionValue)}\r\n                        key={sortByOptionValue}\r\n                        onClick={handleSortByChange.bind(sortByOptionValue)}>\r\n                    {sortByOption}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n    // Highlights the selected price range\r\n    function renderFilterByPrice() {\r\n        return Object.keys(filterByPrices).map(filterByPrice => {\r\n            let filterByPriceValue = filterByPrices[filterByPrice];\r\n            return (\r\n                    <li className={getFilterByPriceClass(filterByPriceValue)}\r\n                        key={filterByPriceValue}\r\n                        onClick={()=>handleFilterByPriceChange(filterByPriceValue)}>\r\n                    {filterByPrice}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n\r\n    // Highlights open or closed\r\n    function renderFilterByOpenNow() {\r\n        return Object.keys(filterByOpenNows).map(filterByOpenNow => {\r\n            let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\r\n            return (\r\n                    <li className={getFilterByOpenNowClass(filterByOpenNowValue)}\r\n                        key={filterByOpenNowValue}\r\n                        onClick={handleFilterByOpenNowChange.bind(filterByOpenNowValue)}>\r\n                    {filterByOpenNow}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n    // Renders two input boxes. One for business and the other for location. \r\n    return (\r\n        <div className=\"SearchBar\">\r\n\r\n\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                    {renderSortByOptions()} \r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"SearchBar-filter-prices\">\r\n                <ul>\r\n                    {renderFilterByPrice()}\r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-filter-openNow\">          \r\n                <ul>\r\n                    {renderFilterByOpenNow()} \r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-fields\">\r\n                    \r\n                <input placeholder=\"Enter Keyword. e.g. burgers\" onChange={handleTermChange} />\r\n                <input placeholder=\"Enter Location. e.g. San Jose\" onChange={handleLocationChange} />\r\n                <input placeholder=\"Enter Radius in Meters. e.g. 30000\" onChange={handleRadiusChange} />\r\n\r\n            </div>\r\n\r\n\r\n\r\n                <div className=\"SearchBar-submit\">\r\n                <a onClick={handleSearch}>Search</a>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}