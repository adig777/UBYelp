{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\Settings\\\\ThemeSetter.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport Switch from \"antd/lib/switch\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport ThemeContext from \"./Themes/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeSetter() {\n  _s();\n\n  const {\n    switcher,\n    themes\n  } = useThemeSwitcher();\n  const {\n    darkTheme,\n    setDarkTheme\n  } = useContext(ThemeContext);\n  useEffect(() => {\n    switcher({\n      theme: !darkTheme ? themes.light : themes.dark\n    });\n  }, [darkTheme]);\n\n  const toggleDarkMode = () => {\n    setDarkTheme(!darkTheme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    checked: darkTheme,\n    onChange: toggleDarkMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThemeSetter, \"bT7Wl0OCmj3HXxZkrWrur/+kwfA=\", false, function () {\n  return [useThemeSwitcher];\n});\n\n_c = ThemeSetter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSetter\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/Settings/ThemeSetter.js"],"names":["useContext","useEffect","Switch","useThemeSwitcher","ThemeContext","ThemeSetter","switcher","themes","darkTheme","setDarkTheme","theme","light","dark","toggleDarkMode"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBJ,gBAAgB,EAA7C;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BT,UAAU,CAACI,YAAD,CAA9C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,KAAK,EAAE,CAACF,SAAD,GAAaD,MAAM,CAACI,KAApB,GAA4BJ,MAAM,CAACK;AAA5C,KAAD,CAAR;AACA,GAFQ,EAEN,CAACJ,SAAD,CAFM,CAAT;;AAIA,QAAMK,cAAc,GAAG,MAAM;AAC5BJ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACA,GAFD;;AAIA,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,SAAjB;AAA4B,IAAA,QAAQ,EAAEK;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAbuBR,W;UACMF,gB;;;KADNE,W","sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport Switch from \"antd/lib/switch\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport ThemeContext from \"./Themes/ThemeContext\";\r\n\r\nexport default function ThemeSetter() {\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\tconst { darkTheme, setDarkTheme } = useContext(ThemeContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tswitcher({ theme: !darkTheme ? themes.light : themes.dark });\r\n\t}, [darkTheme]);\r\n\r\n\tconst toggleDarkMode = () => {\r\n\t\tsetDarkTheme(!darkTheme);\r\n\t};\r\n\r\n\treturn <Switch checked={darkTheme} onChange={toggleDarkMode} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}