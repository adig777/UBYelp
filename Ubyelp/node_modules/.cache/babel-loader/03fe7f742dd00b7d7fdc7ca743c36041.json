{"ast":null,"code":"import { useState, useCallback, useEffect, useMemo, createElement, useContext, createContext } from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction findCommentNode(comment) {\n  var head = document.head;\n\n  for (var i = 0; i < head.childNodes.length; i++) {\n    var _node$nodeValue;\n\n    var node = head.childNodes[i];\n\n    if (node.nodeType === 8 && (node == null ? void 0 : (_node$nodeValue = node.nodeValue) == null ? void 0 : _node$nodeValue.trim()) === comment) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\nfunction isElement(o) {\n  return typeof HTMLElement === 'object' ? o instanceof HTMLElement //DOM2\n  : o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string';\n}\n\nfunction arrayToObject(array) {\n  var obj = {};\n  array.forEach(function (el) {\n    return obj[el] = el;\n  });\n  return obj;\n}\n\nfunction createLinkElement(attributes) {\n  var linkElement = document.createElement('link');\n\n  for (var _i = 0, _Object$entries = Object.entries(attributes); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        attribute = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (attribute === 'onload') {\n      linkElement.onload = attributes.onload;\n      continue;\n    } // @ts-ignore\n\n\n    linkElement[attribute] = value;\n  }\n\n  return linkElement;\n}\n\nvar Status;\n\n(function (Status) {\n  Status[\"idle\"] = \"idle\";\n  Status[\"loading\"] = \"loading\";\n  Status[\"loaded\"] = \"loaded\";\n})(Status || (Status = {}));\n\nvar ThemeSwitcherContext = /*#__PURE__*/createContext(undefined);\n\nfunction ThemeSwitcherProvider(_ref) {\n  var themeMap = _ref.themeMap,\n      insertionPoint = _ref.insertionPoint,\n      defaultTheme = _ref.defaultTheme,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'current-theme-style' : _ref$id,\n      _ref$attr = _ref.attr,\n      attr = _ref$attr === void 0 ? 'data-theme' : _ref$attr,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"themeMap\", \"insertionPoint\", \"defaultTheme\", \"id\", \"attr\"]);\n\n  var _React$useState = useState(Status.idle),\n      status = _React$useState[0],\n      setStatus = _React$useState[1];\n\n  var _React$useState2 = useState(),\n      currentTheme = _React$useState2[0],\n      setCurrentTheme = _React$useState2[1];\n\n  var insertStyle = useCallback(function (linkElement) {\n    if (insertionPoint || insertionPoint === null) {\n      var insertionPointElement = isElement(insertionPoint) ? insertionPoint : findCommentNode(insertionPoint);\n\n      if (!insertionPointElement) {\n        console.warn(\"Insertion point '\" + insertionPoint + \"' does not exist. Be sure to add comment on head and that it matches the insertionPoint\");\n        return document.head.appendChild(linkElement);\n      }\n\n      var parentNode = insertionPointElement.parentNode;\n\n      if (parentNode) {\n        return parentNode.insertBefore(linkElement, insertionPointElement.nextSibling);\n      }\n    } else {\n      return document.head.appendChild(linkElement);\n    }\n  }, [insertionPoint]);\n  var switcher = useCallback(function (_ref2) {\n    var theme = _ref2.theme;\n    if (theme === currentTheme) return;\n\n    if (themeMap[theme]) {\n      setStatus(Status.loading);\n      var linkElement = createLinkElement({\n        type: 'text/css',\n        rel: 'stylesheet',\n        id: id + '_temp',\n        href: themeMap[theme],\n        onload: function onload() {\n          var previousStyle = document.getElementById(id);\n\n          if (previousStyle) {\n            previousStyle.remove();\n          }\n\n          var nextStyle = document.getElementById(id + '_temp');\n\n          if (nextStyle) {\n            nextStyle.setAttribute('id', id);\n          }\n\n          setStatus(Status.loaded);\n        }\n      });\n      insertStyle(linkElement);\n      setCurrentTheme(theme);\n    } else {\n      return console.warn('Could not find specified theme');\n    }\n\n    document.body.setAttribute(attr, theme);\n  }, [themeMap, insertStyle, attr, id, currentTheme]);\n  useEffect(function () {\n    if (defaultTheme) {\n      switcher({\n        theme: defaultTheme\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [defaultTheme]);\n  useEffect(function () {\n    var themes = Object.keys(themeMap);\n    themes.map(function (theme) {\n      var themeAssetId = \"theme-prefetch-\" + theme;\n\n      if (!document.getElementById(themeAssetId)) {\n        var stylePrefetch = document.createElement('link');\n        stylePrefetch.rel = 'prefetch';\n        stylePrefetch.type = 'text/css';\n        stylePrefetch.id = themeAssetId;\n        stylePrefetch.href = themeMap[theme];\n        insertStyle(stylePrefetch);\n      }\n\n      return '';\n    });\n  }, [themeMap, insertStyle]);\n  var value = useMemo(function () {\n    return {\n      switcher: switcher,\n      status: status,\n      currentTheme: currentTheme,\n      themes: arrayToObject(Object.keys(themeMap))\n    };\n  }, [switcher, status, currentTheme, themeMap]);\n  return createElement(ThemeSwitcherContext.Provider, Object.assign({\n    value: value\n  }, rest));\n}\n\nfunction useThemeSwitcher() {\n  var context = useContext(ThemeSwitcherContext);\n\n  if (!context) {\n    throw new Error('To use `useThemeSwitcher`, component must be within a ThemeSwitcherProvider');\n  }\n\n  return context;\n}\n\nexport { ThemeSwitcherProvider, useThemeSwitcher };","map":{"version":3,"mappings":"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","names":["findCommentNode","comment","head","document","i","childNodes","length","node","nodeType","nodeValue","trim","isElement","o","HTMLElement","nodeName","arrayToObject","array","obj","forEach","el","createLinkElement","attributes","linkElement","createElement","Object","entries","attribute","value","onload","Status","ThemeSwitcherContext","React","undefined","ThemeSwitcherProvider","themeMap","insertionPoint","defaultTheme","id","_ref$id","attr","_ref$attr","rest","idle","status","setStatus","currentTheme","setCurrentTheme","insertStyle","insertionPointElement","console","warn","appendChild","parentNode","insertBefore","nextSibling","switcher","theme","loading","type","rel","href","previousStyle","getElementById","remove","nextStyle","setAttribute","loaded","body","themes","keys","map","themeAssetId","stylePrefetch","Provider","useThemeSwitcher","context","Error"],"sources":["C:\\Users\\truon\\OneDrive\\Desktop\\School\\Semester 8\\CS 160\\Project\\UBYelp\\UBYelp\\Ubyelp\\node_modules\\react-css-theme-switcher\\src\\utils.ts","C:\\Users\\truon\\OneDrive\\Desktop\\School\\Semester 8\\CS 160\\Project\\UBYelp\\UBYelp\\Ubyelp\\node_modules\\react-css-theme-switcher\\src\\index.tsx"],"sourcesContent":["export function findCommentNode(comment: string) {\n  const head = document.head;\n  for (let i = 0; i < head.childNodes.length; i++) {\n    const node = head.childNodes[i];\n    if (node.nodeType === 8 && node?.nodeValue?.trim() === comment) {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function isElement(o: any): Boolean {\n  return typeof HTMLElement === 'object'\n    ? o instanceof HTMLElement //DOM2\n    : o &&\n        typeof o === 'object' &&\n        o !== null &&\n        o.nodeType === 1 &&\n        typeof o.nodeName === 'string';\n}\n\nexport function arrayToObject(array: string[]): Record<any, string> {\n  const obj: Record<any, string> = {};\n  array.forEach(el => (obj[el] = el));\n  return obj;\n}\n\nexport function createLinkElement(attributes: Record<string, any>) {\n  const linkElement = document.createElement('link');\n\n  for (const [attribute, value] of Object.entries(attributes)) {\n    if (attribute === 'onload') {\n      linkElement.onload = attributes.onload;\n      continue;\n    }\n\n    // @ts-ignore\n    linkElement[attribute] = value;\n  }\n\n  return linkElement;\n}\n","import * as React from 'react';\nimport {\n  findCommentNode,\n  arrayToObject,\n  createLinkElement,\n  isElement,\n} from './utils';\n\nenum Status {\n  idle = 'idle',\n  loading = 'loading',\n  loaded = 'loaded',\n}\n\ninterface IThemeSwitcherContext {\n  currentTheme: string | undefined;\n  themes: Record<any, string>;\n  switcher: ({ theme }: { theme: string }) => void;\n  status: Status;\n}\n\nconst ThemeSwitcherContext = React.createContext<\n  IThemeSwitcherContext | undefined\n>(undefined);\n\ninterface Props {\n  themeMap: Record<any, string>;\n  children?: React.ReactNode;\n  insertionPoint?: string | HTMLElement | null;\n  id?: string;\n  defaultTheme?: string;\n  attr?: string;\n}\n\nexport function ThemeSwitcherProvider({\n  themeMap,\n  insertionPoint,\n  defaultTheme,\n  id = 'current-theme-style',\n  attr = 'data-theme',\n  ...rest\n}: Props) {\n  const [status, setStatus] = React.useState<Status>(Status.idle);\n  const [currentTheme, setCurrentTheme] = React.useState<string>();\n\n  const insertStyle = React.useCallback(\n    (linkElement: HTMLElement): HTMLElement | void => {\n      if (insertionPoint || insertionPoint === null) {\n        const insertionPointElement = isElement(insertionPoint)\n          ? (insertionPoint as HTMLElement)\n          : findCommentNode(insertionPoint as string);\n\n        if (!insertionPointElement) {\n          console.warn(\n            `Insertion point '${insertionPoint}' does not exist. Be sure to add comment on head and that it matches the insertionPoint`\n          );\n          return document.head.appendChild(linkElement);\n        }\n\n        const { parentNode } = insertionPointElement;\n        if (parentNode) {\n          return parentNode.insertBefore(\n            linkElement,\n            insertionPointElement.nextSibling\n          );\n        }\n      } else {\n        return document.head.appendChild(linkElement);\n      }\n    },\n    [insertionPoint]\n  );\n\n  const switcher = React.useCallback(\n    ({ theme }: { theme: string }) => {\n      if (theme === currentTheme) return;\n\n      if (themeMap[theme]) {\n        setStatus(Status.loading);\n\n        const linkElement = createLinkElement({\n          type: 'text/css',\n          rel: 'stylesheet',\n          id: id + '_temp',\n          href: themeMap[theme],\n          onload: () => {\n            const previousStyle = document.getElementById(id);\n            if (previousStyle) {\n              previousStyle.remove();\n            }\n\n            const nextStyle = document.getElementById(id + '_temp');\n            if (nextStyle) {\n              nextStyle.setAttribute('id', id);\n            }\n            setStatus(Status.loaded);\n          },\n        });\n\n        insertStyle(linkElement);\n        setCurrentTheme(theme);\n      } else {\n        return console.warn('Could not find specified theme');\n      }\n\n      document.body.setAttribute(attr, theme);\n    },\n    [themeMap, insertStyle, attr, id, currentTheme]\n  );\n\n  React.useEffect(() => {\n    if (defaultTheme) {\n      switcher({ theme: defaultTheme });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultTheme]);\n\n  React.useEffect(() => {\n    const themes = Object.keys(themeMap);\n\n    themes.map(theme => {\n      const themeAssetId = `theme-prefetch-${theme}`;\n      if (!document.getElementById(themeAssetId)) {\n        const stylePrefetch = document.createElement('link');\n        stylePrefetch.rel = 'prefetch';\n        stylePrefetch.type = 'text/css';\n        stylePrefetch.id = themeAssetId;\n        stylePrefetch.href = themeMap[theme];\n\n        insertStyle(stylePrefetch);\n      }\n      return '';\n    });\n  }, [themeMap, insertStyle]);\n\n  const value = React.useMemo(\n    () => ({\n      switcher,\n      status,\n      currentTheme,\n      themes: arrayToObject(Object.keys(themeMap)),\n    }),\n    [switcher, status, currentTheme, themeMap]\n  );\n\n  return <ThemeSwitcherContext.Provider value={value} {...rest} />;\n}\n\nexport function useThemeSwitcher() {\n  const context = React.useContext(ThemeSwitcherContext);\n  if (!context) {\n    throw new Error(\n      'To use `useThemeSwitcher`, component must be within a ThemeSwitcherProvider'\n    );\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}