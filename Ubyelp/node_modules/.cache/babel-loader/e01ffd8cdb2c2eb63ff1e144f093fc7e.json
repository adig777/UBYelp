{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\Login\\\\Loginpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './Loginpage.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    }).then(response => response.json()).then(id => {\n      if (id !== -1) {\n        //If login success, redirect with id transfered\n        navigate('/search', {\n          'state': {\n            'id': id\n          }\n        });\n      } else {\n        //Please try again message\n        document.getElementById(\"error\").innerHTML = 'Login Failed!';\n      }\n    });\n    event.preventDefault(); ///Testing///\n\n    fetch('http://localhost:3001/search', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        //TBD\n        id: 663 //Temp\n\n      })\n    }).then(response => response.json()).then(result => {\n      //TDB\n      console.log(result);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charset: \"UTF-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UBYelp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDF6EIt's Yelp, but UnBiased\\uD83C\\uDF70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"input-header\",\n          children: \"Enter Username or Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          className: \"input\",\n          type: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"input-header\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          disabled: !validateForm(),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Don't Have an Account Yet?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          onClick: () => {\n            navigate('/signup');\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/Login/Loginpage.js"],"names":["React","useState","Form","Button","useNavigate","Login","username","setUsername","password","setPassword","navigate","validateForm","length","handleSubmit","event","fetch","method","headers","body","JSON","stringify","then","response","json","id","document","getElementById","innerHTML","preventDefault","result","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './Loginpage.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n  \r\n    function validateForm() {\r\n      return username.length > 0 && password.length > 0;\r\n    }\r\n    function handleSubmit(event) {\r\n        fetch('http://localhost:3001/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                'username': username,\r\n                'password': password\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((id) => {\r\n            if (id !== -1) {\r\n                //If login success, redirect with id transfered\r\n                navigate('/search', { 'state': {'id':id}});\r\n            } else {\r\n                //Please try again message\r\n                document.getElementById(\"error\").innerHTML = 'Login Failed!';\r\n            }\r\n        });\r\n        event.preventDefault();\r\n\r\n        ///Testing///\r\n        fetch('http://localhost:3001/search', {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                //TBD\r\n                id: 663 //Temp\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((result) => {\r\n            //TDB\r\n            console.log(result);\r\n        });\r\n    }\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n       <meta charset=\"UTF-8\"></meta>\r\n\r\n        <header>\r\n          <h1>UBYelp</h1>\r\n          <h4>&#127854;It's Yelp, but UnBiased&#127856;</h4>\r\n        </header>\r\n\r\n\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n            \r\n            <Form.Group size=\"lg\" controlId=\"username\">\r\n            <Form.Label className=\"input-header\">Enter Username or Email</Form.Label>\r\n            <Form.Control\r\n                autoFocus\r\n                className=\"input\"\r\n                type=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group  size=\"lg\" controlId=\"password\">\r\n            <Form.Label className=\"input-header\">Password</Form.Label>\r\n            <Form.Control\r\n                className=\"input\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n\r\n            <p>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n            Log In\r\n            </Button>\r\n            </p>\r\n\r\n            <p>\r\n                <label>Don't Have an Account Yet?</label>\r\n            </p>\r\n\r\n            <p>\r\n            <Button block size=\"lg\" onClick={() => { navigate('/signup') }}>\r\n                Sign Up\r\n            </Button>\r\n            </p>\r\n\r\n\r\n            \r\n\r\n\r\n        </Form>\r\n        <div id=\"error\" className=\"error\"></div>\r\n      </div>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}