{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './SearchBar.css';\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const {\n    transfer\n  } = useLocation();\n  const {\n    account_id\n  } = transfer;\n  const navigate = useNavigate();\n  var state = {\n    id: account_id,\n    term: '',\n    location: '',\n    sortBy: 'best_match',\n    price: 2,\n    open_now: true,\n    radius: 30000\n  };\n  const sortByOptions = {\n    'Best Match': 'best_match',\n    'Highest Rated': 'rating',\n    'Most Reviewed': 'review_count'\n  };\n  const filterByPrices = {\n    '$': 1,\n    '$$': 2,\n    '$$$': 3,\n    '$$$$': 4\n  };\n  const filterByOpenNows = {\n    'Open': 1,\n    'Closed': 0\n  }; // Determines which sort method to highlight\n\n  function getSortByClass(sortByOption) {\n    if (state.sortBy === sortByOption) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByPriceClass(filterByPrice) {\n    if (state.price === filterByPrice) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByOpenNowClass(filterByOpenNow) {\n    if (state.open_now === filterByOpenNow) {\n      return 'active';\n    }\n\n    return '';\n  } // Determines which sort method to use\n\n\n  function handleSortByChange(sortByOption) {\n    setState({\n      sortBy: sortByOption\n    });\n  } // Determines which price range we choose\n\n\n  function handleFilterByPriceChange(filterByPrice) {\n    setState({\n      price: filterByPrice\n    });\n  } // Determines open or closed\n\n\n  function handleFilterByOpenNowChange(filterByOpenNow) {\n    setState({\n      open_now: filterByOpenNow\n    });\n  } // Updates food/product input given by user\n\n\n  function handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    });\n  } // Updates location input given by user\n\n\n  function handleLocationChange(event) {\n    this.setState({\n      location: event.target.value\n    });\n  } // Updates radius input given by user\n\n\n  function handleRadiusChange(event) {\n    this.setState({\n      radius: event.target.value\n    });\n  } // Queries Yelp for food/product\n\n\n  function handleSearch(event) {\n    this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\n    fetch('http://localhost:3001/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        //Temporary variables used \n        //Alternative option: JSON.stringify(this.filters)\n        id: this.state.id,\n        keywords: 'fast food',\n        location: 'san jose, 95112',\n        sort_by: 'distance',\n        radius: -1,\n        rating: -1,\n        price: '',\n        open: 0,\n        in_list: '',\n        not_list: ''\n      })\n    }).then(response => response.json()).then(result => {\n      //Send to account_id and results BusinessList\n      this.navigate('/results', {\n        'state': {\n          'id': this.state.id,\n          'results': result\n        }\n      });\n    });\n    event.preventDefault();\n  } // Highlights the selected sort-by method\n\n\n  function renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getSortByClass(sortByOptionValue),\n        onClick: handleSortByChange.bind(sortByOptionValue),\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights the selected price range\n\n\n  function renderFilterByPrice() {\n    return Object.keys(filterByPrices).map(filterByPrice => {\n      let filterByPriceValue = filterByPrices[filterByPrice];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByPriceClass(filterByPriceValue),\n        onClick: handleFilterByPriceChange.bind(filterByPriceValue),\n        children: filterByPrice\n      }, filterByPriceValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights open or closed\n\n\n  function renderFilterByOpenNow() {\n    return Object.keys(filterByOpenNows).map(filterByOpenNow => {\n      let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByOpenNowClass(filterByOpenNowValue),\n        onClick: handleFilterByOpenNowChange.bind(filterByOpenNowValue),\n        children: filterByOpenNow\n      }, filterByOpenNowValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this);\n    });\n  } // Renders two input boxes. One for business and the other for location. \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-sort-options\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-prices\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByPrice()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-openNow\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByOpenNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Keyword. e.g. burgers\",\n        onChange: handleTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Location. e.g. San Jose\",\n        onChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Radius in Meters. e.g. 30000\",\n        onChange: handleRadiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: this.handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"bT8K8B0tBkzLhri491M1GU7E0nc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/SearchBar/SearchBar.js"],"names":["React","useLocation","useNavigate","SearchBar","transfer","account_id","navigate","state","id","term","location","sortBy","price","open_now","radius","sortByOptions","filterByPrices","filterByOpenNows","getSortByClass","sortByOption","getFilterByPriceClass","filterByPrice","getFilterByOpenNowClass","filterByOpenNow","handleSortByChange","setState","handleFilterByPriceChange","handleFilterByOpenNowChange","handleTermChange","event","target","value","handleLocationChange","handleRadiusChange","handleSearch","props","searchYelp","fetch","method","headers","body","JSON","stringify","keywords","sort_by","rating","open","in_list","not_list","then","response","json","result","preventDefault","renderSortByOptions","Object","keys","map","sortByOptionValue","bind","renderFilterByPrice","filterByPriceValue","renderFilterByOpenNow","filterByOpenNowValue"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SearchBar() {\r\n    const { transfer } = useLocation();\r\n    const { account_id } = transfer;\r\n    const navigate = useNavigate();\r\n\r\n    var state = {\r\n        id: account_id,\r\n        term:'',\r\n        location:'',\r\n        sortBy:'best_match',\r\n        price: 2,\r\n        open_now: true,\r\n        radius: 30000\r\n    };\r\n\r\n    const sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count'\r\n    };\r\n\r\n    const filterByPrices = {\r\n        '$': 1,\r\n        '$$': 2,\r\n        '$$$': 3,\r\n        '$$$$': 4\r\n    };\r\n\r\n    const filterByOpenNows = {\r\n        'Open': 1,\r\n        'Closed': 0\r\n    };\r\n\r\n\r\n\r\n\r\n    // Determines which sort method to highlight\r\n    function getSortByClass(sortByOption) {\r\n        if(state.sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n\r\n    function getFilterByPriceClass(filterByPrice){\r\n        if(state.price === filterByPrice) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n\r\n\r\n    function getFilterByOpenNowClass(filterByOpenNow){\r\n        if(state.open_now === filterByOpenNow) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    // Determines which sort method to use\r\n    function handleSortByChange(sortByOption) {\r\n        setState({sortBy: sortByOption})\r\n    }\r\n\r\n\r\n     // Determines which price range we choose\r\n    function handleFilterByPriceChange(filterByPrice) {\r\n        setState({price: filterByPrice})\r\n    }\r\n\r\n    // Determines open or closed\r\n    function handleFilterByOpenNowChange(filterByOpenNow) {\r\n        setState({open_now: filterByOpenNow})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Updates food/product input given by user\r\n    function handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    // Updates location input given by user\r\n    function handleLocationChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n     // Updates radius input given by user\r\n    function handleRadiusChange(event) {\r\n        this.setState({radius: event.target.value});\r\n    }\r\n\r\n    \r\n\r\n\r\n    // Queries Yelp for food/product\r\n    function handleSearch(event) {\r\n        this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\r\n        fetch('http://localhost:3001/search', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                //Temporary variables used \r\n                //Alternative option: JSON.stringify(this.filters)\r\n                id: this.state.id,\r\n                keywords: 'fast food',\r\n                location: 'san jose, 95112',\r\n                sort_by: 'distance',\r\n                radius: -1,\r\n                rating: -1,\r\n                price: '',\r\n                open: 0,\r\n                in_list: '',\r\n                not_list: ''\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((result) => {\r\n            //Send to account_id and results BusinessList\r\n            this.navigate('/results', { 'state': { 'id': this.state.id, 'results': result } });\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Highlights the selected sort-by method\r\n    function renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return (\r\n                    <li className={getSortByClass(sortByOptionValue)}\r\n                        key={sortByOptionValue}\r\n                        onClick={handleSortByChange.bind(sortByOptionValue)}>\r\n                    {sortByOption}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n     // Highlights the selected price range\r\n    function renderFilterByPrice() {\r\n        return Object.keys(filterByPrices).map(filterByPrice => {\r\n            let filterByPriceValue = filterByPrices[filterByPrice];\r\n            return (\r\n                    <li className={getFilterByPriceClass(filterByPriceValue)}\r\n                        key={filterByPriceValue}\r\n                        onClick={handleFilterByPriceChange.bind(filterByPriceValue)}>\r\n                    {filterByPrice}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n\r\n // Highlights open or closed\r\n    function renderFilterByOpenNow() {\r\n        return Object.keys(filterByOpenNows).map(filterByOpenNow => {\r\n            let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\r\n            return (\r\n                    <li className={getFilterByOpenNowClass(filterByOpenNowValue)}\r\n                        key={filterByOpenNowValue}\r\n                        onClick={handleFilterByOpenNowChange.bind(filterByOpenNowValue)}>\r\n                    {filterByOpenNow}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n    // Renders two input boxes. One for business and the other for location. \r\n    return (\r\n        <div className=\"SearchBar\">\r\n\r\n\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                    {renderSortByOptions()} \r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"SearchBar-filter-prices\">\r\n                <ul>\r\n                    {renderFilterByPrice()} \r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-filter-openNow\">          \r\n                <ul>\r\n                    {renderFilterByOpenNow()} \r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-fields\">\r\n                    \r\n                <input placeholder=\"Enter Keyword. e.g. burgers\" onChange={handleTermChange} />\r\n                <input placeholder=\"Enter Location. e.g. San Jose\" onChange={handleLocationChange} />\r\n                <input placeholder=\"Enter Radius in Meters. e.g. 30000\" onChange={handleRadiusChange} />\r\n\r\n            </div>\r\n\r\n\r\n\r\n                <div className=\"SearchBar-submit\">\r\n                <a onClick={this.handleSearch}>Search</a>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}