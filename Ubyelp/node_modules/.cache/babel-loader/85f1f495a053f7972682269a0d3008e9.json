{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SearchBar.css';\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const {\n    account_id\n  } = state;\n  const navigate = useNavigate();\n  var thisState = {\n    id: account_id,\n    term: '',\n    location: '',\n    sortBy: 'best_match',\n    price: 2,\n    open_now: true,\n    radius: 30000\n  };\n  const sortByOptions = {\n    'Best Match': 'best_match',\n    'Distance': 'distance',\n    'Highest Rated': 'rating',\n    'Most Reviewed': 'review_count'\n  };\n  const filterByPrices = {\n    '$': 1,\n    '$$': 2,\n    '$$$': 3,\n    '$$$$': 4\n  };\n  const filterByOpenNows = {\n    'Open Now': 1,\n    'Hours don\\'t matter': 0 //Needs a better name\n\n  }; //Initialize state\n\n  const [id, unused] = useState(account_id);\n  const [term, setTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [sortBy, setSortBy] = useState('best_match');\n  const [radius, setRadius] = useState(30000);\n  const [rating, setRating] = useState('-1');\n  const [price, setPrice] = useState('');\n  const [open_now, setOpenNow] = useState(1);\n  const [in_list, setInList] = useState('');\n  const [not_list, setNotList] = useState('');\n  const [priceToggle, setPriceToggle] = useState([false, false, false, false]); //Not a filter\n\n  const [listNames, setListNames] = useState({\n    empty: 'empty'\n  }); //Get Default Filters\n\n  fetch('http://localhost:3001/defaultfilters', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: JSON.stringify({\n      'id': id\n    })\n  }).then(response => response.json()).then(filters => {\n    getLists();\n    setLocation(filters.address);\n    setRadius(filters.distance);\n    setRating(filters.rating);\n    setPrice(filters.price);\n    setOpenNow(filters.open);\n    setInList(filters.in_list);\n    setNotList(filters.not_list);\n    if (filters.address !== '') document.getElementById(\"location\").value = location;\n    if (filters.distance !== -1) document.getElementById(\"radius\").value = radius; //rating\n\n    if (filters.in_list !== '') document.getElementById(\"inList\").value = in_list;\n    if (filters.not_list !== '') document.getElementById(\"notList\").value = not_list;\n  });\n\n  function getLists() {\n    if ('empty' in listNames && listNames['empty'] === 'empty') {\n      //Get List Names\n      fetch('http://localhost:3001/listnames', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          'id': id\n        })\n      }).then(response => response.json()).then(names => {\n        //Format: {'list_name': 'list_id', ...}\n        setListNames(names);\n      });\n    }\n  } // Determines which sort method to highlight\n\n\n  function getSortByClass(sortByOption) {\n    if (sortBy === sortByOption) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByPriceClass(filterByPrice) {\n    if (price === filterByPrice) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  function getFilterByOpenNowClass(filterByOpenNow) {\n    if (open_now === filterByOpenNow) {\n      return 'active';\n    }\n\n    return '';\n  } // Determines which sort method to use\n\n\n  function handleSortByChange(sortByOption) {\n    setSortBy(sortByOption);\n  } // Determines which price range we choose\n\n\n  function handleFilterByPriceChange(filterByPrice) {\n    priceToggle[filterByPrice - 1] = !priceToggle[filterByPrice - 1];\n    let p = '';\n    if (priceToggle[0]) p += '1,';\n    if (priceToggle[1]) p += '2,';\n    if (priceToggle[2]) p += '3,';\n    if (priceToggle[3]) p += '4,';\n    if (p !== '') p = p.substring(0, p.length - 1);\n    setPrice(p);\n    console.log(p);\n  } // Determines open or closed\n\n\n  function handleFilterByOpenNowChange(filterByOpenNow) {\n    setOpenNow(filterByOpenNow);\n  } // Updates food/product input given by user\n\n\n  function handleTermChange(event) {\n    setTerm(event.target.value);\n  } // Updates location input given by user\n\n\n  function handleLocationChange(event) {\n    setLocation(event.target.value);\n  } // Updates radius input given by user\n\n\n  function handleRadiusChange(event) {\n    let value = event.target.value;\n\n    if (value > 40000) {\n      document.getElementById(\"radius\").value = 40000;\n      value = 40000;\n    } else if (value < 1) {\n      document.getElementById(\"radius\").value = 1;\n      value = 1;\n    }\n\n    setRadius(value);\n  }\n\n  function handleRatingChange(event) {\n    setRating(event.target.value);\n  }\n\n  function handleInListChange(event) {\n    setInList(event.target.value);\n  }\n\n  function handleNotListChange(event) {\n    setNotList(event.target.value);\n  } // Queries Yelp for food/product\n\n\n  function handleSearch(event) {\n    //this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\n    console.log(open_now);\n    fetch('http://localhost:3001/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        //Temporary variables used \n        //Alternative option: JSON.stringify(this.filters)\n        id: id,\n        keywords: term,\n        location: location,\n        sort_by: sortBy,\n        radius: radius,\n        rating: rating,\n        price: price,\n        open: open_now,\n        in_list: in_list,\n        not_list: not_list\n      })\n    }).then(response => response.json()).then(result => {\n      //Send to account_id and results BusinessList\n      navigate('/results', {\n        'state': {\n          'account_id': thisState.id,\n          'searchResults': result\n        }\n      });\n    });\n    event.preventDefault();\n  } // Highlights the selected sort-by method\n\n\n  function renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getSortByClass(sortByOptionValue),\n        onClick: () => handleSortByChange(sortByOptionValue),\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights the selected price range\n\n\n  function renderFilterByPrice() {\n    return Object.keys(filterByPrices).map(filterByPrice => {\n      let filterByPriceValue = filterByPrices[filterByPrice];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByPriceClass(filterByPriceValue),\n        onClick: () => handleFilterByPriceChange(filterByPriceValue),\n        children: filterByPrice\n      }, filterByPriceValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights open or closed\n\n\n  function renderFilterByOpenNow() {\n    return Object.keys(filterByOpenNows).map(filterByOpenNow => {\n      let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getFilterByOpenNowClass(filterByOpenNowValue),\n        onClick: () => handleFilterByOpenNowChange(filterByOpenNowValue),\n        children: filterByOpenNow\n      }, filterByOpenNowValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  function renderOptions() {\n    return Object.keys(listNames).map(name => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this);\n    });\n  } // Renders two input boxes. One for business and the other for location. \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-sort-options\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-prices\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByPrice()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-filter-openNow\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderFilterByOpenNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Keyword. e.g. burgers\",\n        onChange: handleTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"location\",\n        placeholder: \"Enter Location. e.g. San Jose\",\n        onChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"radius\",\n        type: \"number\",\n        min: \"1\",\n        max: \"40000\",\n        placeholder: \"Enter Radius in Meters. e.g. 30000\",\n        onChange: handleRadiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"rating\",\n        placeholder: \"Minimum rating. e.g. 3.5\",\n        onChange: handleRatingChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-selects\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"inList\",\n        onChange: handleInListChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select list...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), renderOptions()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"notList\",\n        onChange: handleNotListChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select list...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), renderOptions()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"kp2EIVe92gSWGMeGBJ8bMorqFMA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/SearchBar/SearchBar.js"],"names":["React","useState","useLocation","useNavigate","SearchBar","state","account_id","navigate","thisState","id","term","location","sortBy","price","open_now","radius","sortByOptions","filterByPrices","filterByOpenNows","unused","setTerm","setLocation","setSortBy","setRadius","rating","setRating","setPrice","setOpenNow","in_list","setInList","not_list","setNotList","priceToggle","setPriceToggle","listNames","setListNames","empty","fetch","method","headers","body","JSON","stringify","then","response","json","filters","getLists","address","distance","open","document","getElementById","value","names","getSortByClass","sortByOption","getFilterByPriceClass","filterByPrice","getFilterByOpenNowClass","filterByOpenNow","handleSortByChange","handleFilterByPriceChange","p","substring","length","console","log","handleFilterByOpenNowChange","handleTermChange","event","target","handleLocationChange","handleRadiusChange","handleRatingChange","handleInListChange","handleNotListChange","handleSearch","keywords","sort_by","result","preventDefault","renderSortByOptions","Object","keys","map","sortByOptionValue","renderFilterByPrice","filterByPriceValue","renderFilterByOpenNow","filterByOpenNowValue","renderOptions","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchBar.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function SearchBar() {\r\n    const { state } = useLocation();\r\n    const { account_id } = state;\r\n    const navigate = useNavigate();\r\n\r\n    var thisState = {\r\n        id: account_id,\r\n        term:'',\r\n        location:'',\r\n        sortBy:'best_match',\r\n        price: 2,\r\n        open_now: true,\r\n        radius: 30000 \r\n    };\r\n\r\n    const sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Distance': 'distance',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count'\r\n    };\r\n\r\n    const filterByPrices = {\r\n        '$': 1,\r\n        '$$': 2,\r\n        '$$$': 3,\r\n        '$$$$': 4\r\n    };\r\n\r\n    const filterByOpenNows = {\r\n        'Open Now': 1,\r\n        'Hours don\\'t matter': 0    //Needs a better name\r\n    };\r\n\r\n\r\n    //Initialize state\r\n    const [id, unused] = useState(account_id);\r\n    const [term, setTerm] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [sortBy, setSortBy] = useState('best_match');\r\n    const [radius, setRadius] = useState(30000);\r\n    const [rating, setRating] = useState('-1');\r\n    const [price, setPrice] = useState('');\r\n    const [open_now, setOpenNow] = useState(1);\r\n    const [in_list, setInList] = useState('');\r\n    const [not_list, setNotList] = useState('');\r\n\r\n    const [priceToggle, setPriceToggle] = useState([false, false, false, false]);   //Not a filter\r\n    const [listNames, setListNames] = useState({empty: 'empty'});\r\n\r\n    //Get Default Filters\r\n    fetch('http://localhost:3001/defaultfilters', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: JSON.stringify({\r\n            'id': id\r\n        })\r\n    }).then((response) => response.json()\r\n    ).then((filters) => {\r\n        getLists();\r\n\r\n        setLocation(filters.address);\r\n        setRadius(filters.distance);\r\n        setRating(filters.rating);\r\n        setPrice(filters.price);\r\n        setOpenNow(filters.open);\r\n        setInList(filters.in_list);\r\n        setNotList(filters.not_list);\r\n\r\n        if (filters.address !== '') document.getElementById(\"location\").value = location;\r\n        if (filters.distance !== -1) document.getElementById(\"radius\").value = radius;\r\n        //rating\r\n        if (filters.in_list !== '') document.getElementById(\"inList\").value = in_list\r\n        if (filters.not_list !== '') document.getElementById(\"notList\").value = not_list\r\n\r\n    });\r\n\r\n    function getLists() {\r\n        if ('empty' in listNames && listNames['empty'] === 'empty') {\r\n            //Get List Names\r\n            fetch('http://localhost:3001/listnames', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                body: JSON.stringify({\r\n                    'id': id\r\n                })\r\n            }).then((response) => response.json()\r\n            ).then((names) => {\r\n                //Format: {'list_name': 'list_id', ...}\r\n                setListNames(names);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Determines which sort method to highlight\r\n    function getSortByClass(sortByOption) {\r\n        if(sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n\r\n    function getFilterByPriceClass(filterByPrice){\r\n        if (price === filterByPrice) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n\r\n\r\n    function getFilterByOpenNowClass(filterByOpenNow){\r\n        if (open_now === filterByOpenNow) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    // Determines which sort method to use\r\n    function handleSortByChange(sortByOption) {\r\n        setSortBy(sortByOption);\r\n    }\r\n\r\n\r\n     // Determines which price range we choose\r\n    function handleFilterByPriceChange(filterByPrice) {\r\n        priceToggle[filterByPrice - 1] = !priceToggle[filterByPrice - 1];\r\n\r\n        let p = '';\r\n        if (priceToggle[0]) p += '1,';\r\n        if (priceToggle[1]) p += '2,';\r\n        if (priceToggle[2]) p += '3,';\r\n        if (priceToggle[3]) p += '4,';\r\n        if (p !== '') p=p.substring(0, p.length - 1);\r\n\r\n        setPrice(p);\r\n        console.log(p);\r\n    }\r\n\r\n    // Determines open or closed\r\n    function handleFilterByOpenNowChange(filterByOpenNow) {\r\n        setOpenNow(filterByOpenNow);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Updates food/product input given by user\r\n    function handleTermChange(event) {\r\n        setTerm(event.target.value);\r\n    }\r\n\r\n    // Updates location input given by user\r\n    function handleLocationChange(event) {\r\n        setLocation(event.target.value);\r\n    }\r\n\r\n     // Updates radius input given by user\r\n    function handleRadiusChange(event) {\r\n        let value = event.target.value;\r\n        if (value > 40000) {\r\n            document.getElementById(\"radius\").value = 40000;\r\n            value = 40000;\r\n        } else if (value < 1) {\r\n            document.getElementById(\"radius\").value = 1;\r\n            value = 1;\r\n        }\r\n        setRadius(value);\r\n    }\r\n\r\n    function handleRatingChange(event) {\r\n        setRating(event.target.value);\r\n    }\r\n\r\n    function handleInListChange(event){\r\n        setInList(event.target.value);\r\n    }\r\n\r\n    function handleNotListChange(event) {\r\n        setNotList(event.target.value);\r\n    }\r\n\r\n    // Queries Yelp for food/product\r\n    function handleSearch(event) {\r\n        //this.props.searchYelp(state.term, state.location, state.sortBy, state.price, state.open_now, state.radius);\r\n        console.log(open_now);\r\n        fetch('http://localhost:3001/search', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                //Temporary variables used \r\n                //Alternative option: JSON.stringify(this.filters)\r\n                id: id,\r\n                keywords: term,\r\n                location: location,\r\n                sort_by: sortBy,\r\n                radius: radius,\r\n                rating: rating,\r\n                price: price,\r\n                open: open_now,\r\n                in_list: in_list,\r\n                not_list: not_list\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((result) => {\r\n            //Send to account_id and results BusinessList\r\n            navigate('/results', { 'state': { 'account_id': thisState.id, 'searchResults': result } });\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Highlights the selected sort-by method\r\n    function renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = sortByOptions[sortByOption];\r\n            return (\r\n                    <li className={getSortByClass(sortByOptionValue)}\r\n                        key={sortByOptionValue}\r\n                        onClick={() => handleSortByChange(sortByOptionValue) }>\r\n                    {sortByOption}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n    // Highlights the selected price range\r\n    function renderFilterByPrice() {\r\n        return Object.keys(filterByPrices).map(filterByPrice => {\r\n            let filterByPriceValue = filterByPrices[filterByPrice];\r\n            return (\r\n                    <li className={getFilterByPriceClass(filterByPriceValue)}\r\n                        key={filterByPriceValue}\r\n                        onClick={()=>handleFilterByPriceChange(filterByPriceValue)}>\r\n                    {filterByPrice}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n\r\n    // Highlights open or closed\r\n    function renderFilterByOpenNow() {\r\n        return Object.keys(filterByOpenNows).map(filterByOpenNow => {\r\n            let filterByOpenNowValue = filterByOpenNows[filterByOpenNow];\r\n            return (\r\n                    <li className={getFilterByOpenNowClass(filterByOpenNowValue)}\r\n                        key={filterByOpenNowValue}\r\n                        onClick={()=>handleFilterByOpenNowChange(filterByOpenNowValue)}>\r\n                    {filterByOpenNow}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n    function renderOptions() {\r\n        return Object.keys(listNames).map(name => {\r\n            return (\r\n                <option>{name}</option>\r\n            );\r\n        });\r\n    }\r\n\r\n    // Renders two input boxes. One for business and the other for location. \r\n    return (\r\n        <div className=\"SearchBar\">\r\n\r\n\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                    {renderSortByOptions()} \r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"SearchBar-filter-prices\">\r\n                <ul>\r\n                    {renderFilterByPrice()}\r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-filter-openNow\">          \r\n                <ul>\r\n                    {renderFilterByOpenNow()} \r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"SearchBar-fields\">\r\n                    \r\n                <input placeholder=\"Enter Keyword. e.g. burgers\" onChange={handleTermChange} />\r\n                <input id=\"location\" placeholder=\"Enter Location. e.g. San Jose\" onChange={handleLocationChange} />\r\n                <input id=\"radius\" type=\"number\" min=\"1\" max=\"40000\" placeholder=\"Enter Radius in Meters. e.g. 30000\" onChange={handleRadiusChange} />\r\n                <input id=\"rating\" placeholder=\"Minimum rating. e.g. 3.5\" onChange={handleRatingChange} />\r\n\r\n            </div>\r\n\r\n            <div className=\"SearchBar-selects\">\r\n                <select id=\"inList\" onChange={handleInListChange}>\r\n                    <option value=\"\">Select list...</option>\r\n                    {renderOptions()}\r\n                </select>\r\n                <select id=\"notList\" onChange={handleNotListChange}>\r\n                    <option value=\"\">Select list...</option>\r\n                    {renderOptions()}\r\n                </select>\r\n            </div>\r\n\r\n                <div className=\"SearchBar-submit\">\r\n                <a onClick={handleSearch}>Search</a>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}