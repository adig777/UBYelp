{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\truon\\\\OneDrive\\\\Desktop\\\\School\\\\Semester 8\\\\CS 160\\\\Project\\\\UBYelp\\\\UBYelp\\\\Ubyelp\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  transfer\n} = useLocation();\nconst navigate = useNavigate();\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      account_id\n    } = transfer;\n    this.state = {\n      id: account_id,\n      term: '',\n      location: '',\n      sortBy: 'best_match',\n      price: 2,\n      open_now: true,\n      radius: 30000\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleRadiusChange = this.handleRadiusChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n    this.filterByPrices = {\n      '$': 1,\n      '$$': 2,\n      '$$$': 3,\n      '$$$$': 4\n    };\n    this.filterByOpenNows = {\n      'Open': 1,\n      'Closed': 0\n    };\n  } // Determines which sort method to highlight\n\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  getFilterByPriceClass(filterByPrice) {\n    if (this.state.price === filterByPrice) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  getFilterByOpenNowClass(filterByOpenNow) {\n    if (this.state.open_now === filterByOpenNow) {\n      return 'active';\n    }\n\n    return '';\n  } // Determines which sort method to use\n\n\n  handleSortByChange(sortByOption) {\n    this.setState({\n      sortBy: sortByOption\n    });\n  } // Determines which price range we choose\n\n\n  handleFilterByPriceChange(filterByPrice) {\n    this.setState({\n      price: filterByPrice\n    });\n  } // Determines open or closed\n\n\n  handleFilterByOpenNowChange(filterByOpenNow) {\n    this.setState({\n      open_now: filterByOpenNow\n    });\n  } // Updates food/product input given by user\n\n\n  handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    });\n  } // Updates location input given by user\n\n\n  handleLocationChange(event) {\n    this.setState({\n      location: event.target.value\n    });\n  } // Updates radius input given by user\n\n\n  handleRadiusChange(event) {\n    this.setState({\n      radius: event.target.value\n    });\n  } // Queries Yelp for food/product\n\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy, this.state.price, this.state.open_now, this.state.radius);\n    fetch('http://localhost:3001/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        //Temporary variables used \n        //Alternative option: JSON.stringify(this.filters)\n        id: this.state.id,\n        keywords: 'fast food',\n        location: 'san jose, 95112',\n        sort_by: 'distance',\n        radius: -1,\n        rating: -1,\n        price: '',\n        open: 0,\n        in_list: '',\n        not_list: ''\n      })\n    }).then(response => response.json()).then(result => {\n      //Send to account_id and results BusinessList\n      this.navigate('/results', {\n        'state': {\n          'id': this.state.id,\n          'results': result\n        }\n      });\n    });\n    event.preventDefault();\n  } // Highlights the selected sort-by method\n\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.getSortByClass(sortByOptionValue),\n        onClick: this.handleSortByChange.bind(this, sortByOptionValue),\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this);\n    });\n  } // Highlights the selected price range\n\n\n  renderFilterByPrice() {\n    return Object.keys(this.filterByPrices).map(filterByPrice => {\n      let filterByPriceValue = this.filterByPrices[filterByPrice];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.getFilterByPriceClass(filterByPriceValue),\n        onClick: this.handleFilterByPriceChange.bind(this, filterByPriceValue),\n        children: filterByPrice\n      }, filterByPriceValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this);\n    });\n  } // Highlights open or closed\n\n\n  renderFilterByOpenNow() {\n    return Object.keys(this.filterByOpenNows).map(filterByOpenNow => {\n      let filterByOpenNowValue = this.filterByOpenNows[filterByOpenNow];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.getFilterByOpenNowClass(filterByOpenNowValue),\n        onClick: this.handleFilterByOpenNowChange.bind(this, filterByOpenNowValue),\n        children: filterByOpenNow\n      }, filterByOpenNowValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this);\n    });\n  } // Renders two input boxes. One for business and the other for location. \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-sort-options\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.renderSortByOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-filter-prices\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.renderFilterByPrice()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-filter-openNow\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.renderFilterByOpenNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Keyword. e.g. burgers\",\n          onChange: this.handleTermChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Location. e.g. San Jose\",\n          onChange: this.handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Radius in Meters. e.g. 30000\",\n          onChange: this.handleRadiusChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar-submit\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: this.handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/truon/OneDrive/Desktop/School/Semester 8/CS 160/Project/UBYelp/UBYelp/Ubyelp/src/components/SearchBar/SearchBar.js"],"names":["React","useLocation","useNavigate","transfer","navigate","SearchBar","Component","constructor","props","account_id","state","id","term","location","sortBy","price","open_now","radius","handleTermChange","bind","handleLocationChange","handleRadiusChange","handleSearch","sortByOptions","filterByPrices","filterByOpenNows","getSortByClass","sortByOption","getFilterByPriceClass","filterByPrice","getFilterByOpenNowClass","filterByOpenNow","handleSortByChange","setState","handleFilterByPriceChange","handleFilterByOpenNowChange","event","target","value","searchYelp","fetch","method","headers","body","JSON","stringify","keywords","sort_by","rating","open","in_list","not_list","then","response","json","result","preventDefault","renderSortByOptions","Object","keys","map","sortByOptionValue","renderFilterByPrice","filterByPriceValue","renderFilterByOpenNow","filterByOpenNowValue","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst { transfer } = useLocation();\r\n\r\nconst navigate = useNavigate();\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { account_id } = transfer;\r\n        this.state = {\r\n            id: account_id,\r\n            term:'',\r\n            location:'',\r\n            sortBy:'best_match',\r\n            price: 2,\r\n            open_now: true,\r\n            radius: 30000\r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleRadiusChange = this.handleRadiusChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count'\r\n        };\r\n\r\n        this.filterByPrices = {\r\n            '$': 1,\r\n            '$$': 2,\r\n            '$$$': 3,\r\n            '$$$$': 4\r\n        };\r\n\r\n        this.filterByOpenNows = {\r\n           'Open': 1,\r\n           'Closed': 0\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    // Determines which sort method to highlight\r\n    getSortByClass(sortByOption) {\r\n        if(this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n\r\n    getFilterByPriceClass(filterByPrice){\r\n        if(this.state.price === filterByPrice) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n\r\n\r\n    getFilterByOpenNowClass(filterByOpenNow){\r\n        if(this.state.open_now === filterByOpenNow) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    // Determines which sort method to use\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption})\r\n    }\r\n\r\n\r\n     // Determines which price range we choose\r\n     handleFilterByPriceChange(filterByPrice) {\r\n        this.setState({price: filterByPrice})\r\n    }\r\n\r\n    // Determines open or closed\r\n    handleFilterByOpenNowChange(filterByOpenNow) {\r\n        this.setState({open_now: filterByOpenNow})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Updates food/product input given by user\r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    // Updates location input given by user\r\n    handleLocationChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n     // Updates radius input given by user\r\n     handleRadiusChange(event) {\r\n        this.setState({radius: event.target.value});\r\n    }\r\n\r\n    \r\n\r\n\r\n    // Queries Yelp for food/product\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy, this.state.price, this.state.open_now, this.state.radius);\r\n        fetch('http://localhost:3001/search', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: JSON.stringify({\r\n                //Temporary variables used \r\n                //Alternative option: JSON.stringify(this.filters)\r\n                id: this.state.id,\r\n                keywords: 'fast food',\r\n                location: 'san jose, 95112',\r\n                sort_by: 'distance',\r\n                radius: -1,\r\n                rating: -1,\r\n                price: '',\r\n                open: 0,\r\n                in_list: '',\r\n                not_list: ''\r\n            })\r\n        }).then((response) => response.json()\r\n        ).then((result) => {\r\n            //Send to account_id and results BusinessList\r\n            this.navigate('/results', { 'state': { 'id': this.state.id, 'results': result } });\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Highlights the selected sort-by method\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (\r\n                    <li className={this.getSortByClass(sortByOptionValue)}\r\n                        key={sortByOptionValue}\r\n                        onClick={this.handleSortByChange.bind(this,sortByOptionValue)}>\r\n                    {sortByOption}\r\n                    </li>\r\n                    );  \r\n        });\r\n    }\r\n\r\n\r\n // Highlights the selected price range\r\n renderFilterByPrice() {\r\n    return Object.keys(this.filterByPrices).map(filterByPrice => {\r\n        let filterByPriceValue = this.filterByPrices[filterByPrice];\r\n        return (\r\n                <li className={this.getFilterByPriceClass(filterByPriceValue)}\r\n                    key={filterByPriceValue}\r\n                    onClick={this. handleFilterByPriceChange.bind(this,filterByPriceValue)}>\r\n                {filterByPrice}\r\n                </li>\r\n                );  \r\n    });\r\n}\r\n\r\n\r\n\r\n // Highlights open or closed\r\n renderFilterByOpenNow() {\r\n    return Object.keys(this.filterByOpenNows).map(filterByOpenNow => {\r\n        let filterByOpenNowValue = this.filterByOpenNows[filterByOpenNow];\r\n        return (\r\n                <li className={this.getFilterByOpenNowClass(filterByOpenNowValue)}\r\n                    key={filterByOpenNowValue}\r\n                    onClick={this. handleFilterByOpenNowChange.bind(this,filterByOpenNowValue)}>\r\n                {filterByOpenNow}\r\n                </li>\r\n                );  \r\n    });\r\n}\r\n\r\n    // Renders two input boxes. One for business and the other for location. \r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n\r\n\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()} \r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"SearchBar-filter-prices\">\r\n                    <ul>\r\n                        {this.renderFilterByPrice()} \r\n                    </ul>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"SearchBar-filter-openNow\">          \r\n                    <ul>\r\n                        {this.renderFilterByOpenNow()} \r\n                    </ul>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"SearchBar-fields\">\r\n                    \r\n                    <input placeholder=\"Enter Keyword. e.g. burgers\" onChange={this.handleTermChange} />\r\n                    <input placeholder=\"Enter Location. e.g. San Jose\" onChange={this.handleLocationChange} />\r\n                    <input placeholder=\"Enter Radius in Meters. e.g. 30000\" onChange={this.handleRadiusChange} />\r\n\r\n                </div>\r\n\r\n\r\n\r\n                 <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Search</a>\r\n                </div>\r\n            </div>    \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}